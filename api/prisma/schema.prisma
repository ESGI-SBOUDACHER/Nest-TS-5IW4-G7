// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  firstname String?
  lastname  String?
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Article   Article[]
  Comment   Comment[]
  Like      Like[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Article   Article[]
}

model Article {
  id          Int       @id @default(autoincrement())
  title       String
  content     String
  isPublished Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  authorId    Int
  author      User      @relation(fields: [authorId], references: [id])
  categoryId  Int
  category    Category  @relation(fields: [categoryId], references: [id])
  Comment     Comment[]
  Like        Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  articleId Int
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  articleId Int
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
}
